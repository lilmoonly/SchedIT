@model IEnumerable<IGrouping<string, MyMvcApp.Models.Schedule>>
@{
    ViewData["Title"] = "Розклад";
    var daysOrder = ViewBag.DaysOrder as Dictionary<string, int>;
    var conflicts = ViewBag.Conflicts as List<MyMvcApp.Models.Schedule>;

    // Преобразуем список conflicts в JSON строку для использования в JS
    var conflictsJson = Json.Serialize(conflicts);
}

<style>
    .schedule-table col.time-col    { width: 15%; }
    .schedule-table col.subject-col { width: 35%; }
    .schedule-table col.teacher-col { width: 30%; }
    .schedule-table col.room-col    { width: 20%; }

    .schedule-table .conflic_cell {
        background-color: #f22d3d; /* Колір для клітинок, які конфліктують */
        color: white; /* Білий текст для кращої видимості */
    }
    
    .schedule-table .conflict_row {
        background-color: #e1888f; /* Колір для конфліктних рядків */
    }

</style>

<div class="container py-4">
    <h2 class="text-center mb-4">Розклад</h2>

    @foreach (var group in Model)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-dark text-white">
                <h4 class="mb-0">@group.Key</h4>
            </div>
            <div class="card-body p-0">
                <table class=" table-hover mb-0 schedule-table">
                    <colgroup>
                        <col class="time-col" />
                        <col class="subject-col" />
                        <col class="teacher-col" />
                        <col class="room-col" />
                    </colgroup>
                    <thead class="table-light">
                        <tr>
                            <th>Час</th>
                            <th>Предмет</th>
                            <th>Викладач</th>
                            <th>Аудиторія</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var schedule in group)
                        {
                            // Перевіряємо, чи є конфлікти для цього розкладу
                            var isConflicted = conflicts.Any(c => c.Id == schedule.Id);

                            // Логування для дебагу
                            <text>
                                console.log("Checking schedule ID: @schedule.Id - Conflicted: @isConflicted");
                            </text>

                            <tr class="@((isConflicted ? "conflict_row" : ""))" >
                                <text>
                                    @((isConflicted ? "conflict_row" : ""))
                                </text>
                                <td class="@(isConflicted && schedule.TimeEntry != null ? "conflict_cell" : "")">
                                    @schedule.TimeEntry?.Value
                                </td>
                                <td class="@(isConflicted && schedule.Subject != null ? "conflict_cell" : "")">
                                    @schedule.Subject?.Name
                                </td>
                                <td class="@(isConflicted && schedule.Teacher != null ? "conflict_cell" : "")">
                                    @schedule.Teacher?.ShortName<br />
                                    <small class="text-muted">@schedule.Teacher?.Position</small>
                                </td>
                                <td class="@(isConflicted && schedule.Classroom != null ? "conflict_cell" : "")">
                                    @schedule.Classroom?.Number, @schedule.Classroom?.Building
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    @if (User.IsInRole("User") || User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
    {
        <div class="card shadow-sm mt-5">
            <div class="card-body">
                <h3 class="card-title">Оцініть зручність розкладу</h3>
                <form method="post" asp-action="RateSchedule">
                    <div class="mb-3">
                        <label for="rating" class="form-label">за шкалою від 0 до 5:</label>
                        <input type="number" id="rating" name="rating" min="0" max="5" class="form-control" required />
                    </div>
                    <input type="hidden" name="scheduleId" value="1" />
                    <button type="submit" class="btn btn-success w-100">Відправити оцінку</button>
                </form>
            </div>
        </div>
    }
</div>

<script>
    // Виведення вмісту conflicts на консоль
    var conflicts = @Html.Raw(conflictsJson);
    console.log("Conflicts: ", conflicts);

    // Додаткове логування для кожного розкладу
    document.addEventListener("DOMContentLoaded", function() {
        var model = @Html.Raw(Json.Serialize(Model.SelectMany(g => g))); // Перетворюємо модель в JSON
        model.forEach(function(schedule) {
            console.log("Schedule ID: " + schedule.Id + ", Time: " + (schedule.TimeEntry ? schedule.TimeEntry.Value : 'No time'));
        });
    });

    document.addEventListener("DOMContentLoaded", function() {
        var rows = document.querySelectorAll('tr[data-conflicted]');
        rows.forEach(function(row) {
            var isConflicted = row.getAttribute('data-conflicted') === 'True';
            if (isConflicted) {
                row.classList.add('conflict_row');
                row.querySelectorAll('td').forEach(function(td) {
                    td.classList.add('conflict_cell');
                });
            }
        });
    });


</script>
